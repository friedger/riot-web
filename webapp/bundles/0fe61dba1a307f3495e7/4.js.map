{"version":3,"sources":["src/utils/PasswordScorer.js","src/async-components/views/dialogs/keybackup/CreateKeyBackupDialog.js"],"names":["scorePassword","password","length","userInputs","ZXCVBN_USER_INPUTS","slice","push","MatrixClientPeg","get","getUserIdLocalpart","zxcvbnResult","_zxcvbn2","default","includes","resultNoSpaces","replace","score","i","feedback","suggestions","_languageHandler","_t","warning","__webpack_require__","_td","_PasswordScorer","PHASE_DONE","React","createClass","displayName","getInitialState","phase","passPhrase","passPhraseConfirm","copied","downloaded","setPassPhrase","componentWillMount","this","_recoveryKeyNode","_keyBackupInfo","_collectRecoveryKeyNode","n","_onCopyClick","target","range","document","createRange","selectNodeContents","selection","window","getSelection","removeAllRanges","addRange","selectText","execCommand","setState","_onDownloadClick","blob","Blob","recovery_key","type","FileSaver","saveAs","_createBackup","_this","error","_createBackupPromise","createKeyBackupVersion","then","info","backupAllGroupSessions","version","catch","e","console","log","_onCancel","props","onFinished","_onDone","_onOptOutClick","_onSetUpClick","_onSkipPassPhraseClick","_ref","_bluebird","coroutine","_regenerator2","mark","_callee","wrap","_context","prev","next","resolve","prepareKeyBackupVersion","sent","stop","apply","arguments","_onPassPhraseNextClick","_onPassPhraseKeyPress","key","_passPhraseIsValid","_onPassPhraseConfirmNextClick","_ref2","_callee2","_context2","state","_onPassPhraseConfirmKeyPress","_onSetAgainClick","_onKeepItSafeGotItClick","_onPassPhraseChange","value","_onPassPhraseConfirmChange","_renderPhasePassPhrase","_this2","DialogButtons","sdk","getComponent","AccessibleButton","strengthMeter","helpText","_react2","createElement","suggestionBlock","max","className","onChange","onKeyPress","placeholder","primaryButton","onPrimaryButtonClick","hasCancel","disabled","button","sub","element","onClick","_renderPhasePassPhraseConfirm","passPhraseMatch","matchText","autoFocus","_renderPhaseShowKey","bodyText","ref","_renderPhaseKeepItSafe","introText","b","s","_renderBusyPhase","text","Spinner","_renderPhaseDone","_renderPhaseOptOutConfirm","_titleForPhase","render","BaseDialog","content","onCancel","title"],"mappings":"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","file":"bundles/0fe61dba1a307f3495e7/4.js","sourcesContent":["/*\nCopyright 2018 New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport Zxcvbn from 'zxcvbn';\n\nimport MatrixClientPeg from '../MatrixClientPeg';\nimport { _t, _td } from '../languageHandler';\n\nconst ZXCVBN_USER_INPUTS = [\n    'riot',\n    'matrix',\n];\n\n// Translations for zxcvbn's suggestion strings\n_td(\"Use a few words, avoid common phrases\");\n_td(\"No need for symbols, digits, or uppercase letters\");\n_td(\"Use a longer keyboard pattern with more turns\");\n_td(\"Avoid repeated words and characters\");\n_td(\"Avoid sequences\");\n_td(\"Avoid recent years\");\n_td(\"Avoid years that are associated with you\");\n_td(\"Avoid dates and years that are associated with you\");\n_td(\"Capitalization doesn't help very much\");\n_td(\"All-uppercase is almost as easy to guess as all-lowercase\");\n_td(\"Reversed words aren't much harder to guess\");\n_td(\"Predictable substitutions like '@' instead of 'a' don't help very much\");\n_td(\"Add another word or two. Uncommon words are better.\");\n\n// and warnings\n_td(\"Repeats like \\\"aaa\\\" are easy to guess\");\n_td(\"Repeats like \\\"abcabcabc\\\" are only slightly harder to guess than \\\"abc\\\"\");\n_td(\"Sequences like abc or 6543 are easy to guess\");\n_td(\"Recent years are easy to guess\");\n_td(\"Dates are often easy to guess\");\n_td(\"This is a top-10 common password\");\n_td(\"This is a top-100 common password\");\n_td(\"This is a very common password\");\n_td(\"This is similar to a commonly used password\");\n_td(\"A word by itself is easy to guess\");\n_td(\"Names and surnames by themselves are easy to guess\");\n_td(\"Common names and surnames are easy to guess\");\n\n/**\n * Wrapper around zxcvbn password strength estimation\n * Include this only from async components: it pulls in zxcvbn\n * (obviously) which is large.\n */\nexport function scorePassword(password) {\n    if (password.length === 0) return null;\n\n    const userInputs = ZXCVBN_USER_INPUTS.slice();\n    userInputs.push(MatrixClientPeg.get().getUserIdLocalpart());\n\n    let zxcvbnResult = Zxcvbn(password, userInputs);\n    // Work around https://github.com/dropbox/zxcvbn/issues/216\n    if (password.includes(' ')) {\n        const resultNoSpaces = Zxcvbn(password.replace(/ /g, ''), userInputs);\n        if (resultNoSpaces.score < zxcvbnResult.score) zxcvbnResult = resultNoSpaces;\n    }\n\n    for (let i = 0; i < zxcvbnResult.feedback.suggestions.length; ++i) {\n        // translate suggestions\n        zxcvbnResult.feedback.suggestions[i] = _t(zxcvbnResult.feedback.suggestions[i]);\n    }\n    // and warning, if any\n    if (zxcvbnResult.feedback.warning) {\n        zxcvbnResult.feedback.warning = _t(zxcvbnResult.feedback.warning);\n    }\n\n    return zxcvbnResult;\n}\n","/*\nCopyright 2018 New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport React from 'react';\nimport sdk from '../../../../index';\nimport MatrixClientPeg from '../../../../MatrixClientPeg';\nimport { scorePassword } from '../../../../utils/PasswordScorer';\n\nimport FileSaver from 'file-saver';\n\nimport { _t, _td } from '../../../../languageHandler';\n\nconst PHASE_PASSPHRASE = 0;\nconst PHASE_PASSPHRASE_CONFIRM = 1;\nconst PHASE_SHOWKEY = 2;\nconst PHASE_KEEPITSAFE = 3;\nconst PHASE_BACKINGUP = 4;\nconst PHASE_DONE = 5;\nconst PHASE_OPTOUT_CONFIRM = 6;\n\nconst PASSWORD_MIN_SCORE = 4; // So secure, many characters, much complex, wow, etc, etc.\n\n// XXX: copied from ShareDialog: factor out into utils\nfunction selectText(target) {\n    const range = document.createRange();\n    range.selectNodeContents(target);\n\n    const selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n}\n\n/**\n * Walks the user through the process of creating an e2e key backup\n * on the server.\n */\nexport default React.createClass({\n    getInitialState: function() {\n        return {\n            phase: PHASE_PASSPHRASE,\n            passPhrase: '',\n            passPhraseConfirm: '',\n            copied: false,\n            downloaded: false,\n            zxcvbnResult: null,\n            setPassPhrase: false,\n        };\n    },\n\n    componentWillMount: function() {\n        this._recoveryKeyNode = null;\n        this._keyBackupInfo = null;\n    },\n\n    _collectRecoveryKeyNode: function(n) {\n        this._recoveryKeyNode = n;\n    },\n\n    _onCopyClick: function() {\n        selectText(this._recoveryKeyNode);\n        const successful = document.execCommand('copy');\n        if (successful) {\n            this.setState({\n                copied: true,\n                phase: PHASE_KEEPITSAFE,\n            });\n        }\n    },\n\n    _onDownloadClick: function() {\n        const blob = new Blob([this._keyBackupInfo.recovery_key], {\n            type: 'text/plain;charset=us-ascii',\n        });\n        FileSaver.saveAs(blob, 'recovery-key.txt');\n\n        this.setState({\n            downloaded: true,\n            phase: PHASE_KEEPITSAFE,\n        });\n    },\n\n    _createBackup: function() {\n        this.setState({\n            phase: PHASE_BACKINGUP,\n            error: null,\n        });\n        this._createBackupPromise = MatrixClientPeg.get().createKeyBackupVersion(\n            this._keyBackupInfo,\n        ).then((info) => {\n            return MatrixClientPeg.get().backupAllGroupSessions(info.version);\n        }).then(() => {\n            this.setState({\n                phase: PHASE_DONE,\n            });\n        }).catch(e => {\n            console.log(\"Error creating key backup\", e);\n            this.setState({\n                error: e,\n            });\n        });\n    },\n\n    _onCancel: function() {\n        this.props.onFinished(false);\n    },\n\n    _onDone: function() {\n        this.props.onFinished(true);\n    },\n\n    _onOptOutClick: function() {\n        this.setState({phase: PHASE_OPTOUT_CONFIRM});\n    },\n\n    _onSetUpClick: function() {\n        this.setState({phase: PHASE_PASSPHRASE});\n    },\n\n    _onSkipPassPhraseClick: async function() {\n        this._keyBackupInfo = await MatrixClientPeg.get().prepareKeyBackupVersion();\n        this.setState({\n            copied: false,\n            downloaded: false,\n            phase: PHASE_SHOWKEY,\n        });\n    },\n\n    _onPassPhraseNextClick: function() {\n        this.setState({phase: PHASE_PASSPHRASE_CONFIRM});\n    },\n\n    _onPassPhraseKeyPress: function(e) {\n        if (e.key === 'Enter' && this._passPhraseIsValid()) {\n            this._onPassPhraseNextClick();\n        }\n    },\n\n    _onPassPhraseConfirmNextClick: async function() {\n        this._keyBackupInfo = await MatrixClientPeg.get().prepareKeyBackupVersion(this.state.passPhrase);\n        this.setState({\n            setPassPhrase: true,\n            copied: false,\n            downloaded: false,\n            phase: PHASE_SHOWKEY,\n        });\n    },\n\n    _onPassPhraseConfirmKeyPress: function(e) {\n        if (e.key === 'Enter' && this.state.passPhrase === this.state.passPhraseConfirm) {\n            this._onPassPhraseConfirmNextClick();\n        }\n    },\n\n    _onSetAgainClick: function() {\n        this.setState({\n            passPhrase: '',\n            passPhraseConfirm: '',\n            phase: PHASE_PASSPHRASE,\n        });\n    },\n\n    _onKeepItSafeGotItClick: function() {\n        this.setState({\n            phase: PHASE_SHOWKEY,\n        });\n    },\n\n    _onPassPhraseChange: function(e) {\n        this.setState({\n            passPhrase: e.target.value,\n            // precompute this and keep it in state: zxcvbn is fast but\n            // we use it in a couple of different places so no point recomputing\n            // it unnecessarily.\n            zxcvbnResult: scorePassword(e.target.value),\n        });\n    },\n\n    _onPassPhraseConfirmChange: function(e) {\n        this.setState({\n            passPhraseConfirm: e.target.value,\n        });\n    },\n\n    _passPhraseIsValid: function() {\n        return this.state.zxcvbnResult && this.state.zxcvbnResult.score >= PASSWORD_MIN_SCORE;\n    },\n\n    _renderPhasePassPhrase: function() {\n        const DialogButtons = sdk.getComponent('views.elements.DialogButtons');\n        const AccessibleButton = sdk.getComponent('elements.AccessibleButton');\n\n        let strengthMeter;\n        let helpText;\n        if (this.state.zxcvbnResult) {\n            if (this.state.zxcvbnResult.score >= PASSWORD_MIN_SCORE) {\n                helpText = _t(\"Great! This passphrase looks strong enough.\");\n            } else {\n                const suggestions = [];\n                for (let i = 0; i < this.state.zxcvbnResult.feedback.suggestions.length; ++i) {\n                    suggestions.push(<div key={i}>{this.state.zxcvbnResult.feedback.suggestions[i]}</div>);\n                }\n                const suggestionBlock = suggestions.length > 0 ? <div>\n                    {suggestions}\n                </div> : null;\n\n                helpText = <div>\n                    {this.state.zxcvbnResult.feedback.warning}\n                    {suggestionBlock}\n                </div>;\n            }\n            strengthMeter = <div>\n                <progress max={PASSWORD_MIN_SCORE} value={this.state.zxcvbnResult.score} />\n            </div>;\n        }\n\n        return <div>\n            <p>{_t(\"Secure your encrypted message history with a Recovery Passphrase.\")}</p>\n            <p>{_t(\"You'll need it if you log out or lose access to this device.\")}</p>\n\n            <div className=\"mx_CreateKeyBackupDialog_primaryContainer\">\n                <div className=\"mx_CreateKeyBackupDialog_passPhraseHelp\">\n                    {strengthMeter}\n                    {helpText}\n                </div>\n                <input type=\"password\"\n                    onChange={this._onPassPhraseChange}\n                    onKeyPress={this._onPassPhraseKeyPress}\n                    value={this.state.passPhrase}\n                    className=\"mx_CreateKeyBackupDialog_passPhraseInput\"\n                    placeholder={_t(\"Enter a passphrase...\")}\n                />\n            </div>\n\n            <DialogButtons primaryButton={_t('Next')}\n                onPrimaryButtonClick={this._onPassPhraseNextClick}\n                hasCancel={false}\n                disabled={!this._passPhraseIsValid()}\n            />\n\n            <p>{_t(\n                \"If you don't want encrypted message history to be availble on other devices, \"+\n                \"<button>opt out</button>.\",\n                {},\n                {\n                    button: sub => <AccessibleButton\n                        element=\"span\"\n                        className=\"mx_linkButton\"\n                        onClick={this._onOptOutClick}\n                    >\n                        {sub}\n                    </AccessibleButton>,\n                },\n            )}</p>\n            <p>{_t(\n                \"Or, if you don't want to create a Recovery Passphrase, skip this step and \"+\n                \"<button>download a recovery key</button>.\",\n                {},\n                {\n                    button: sub => <AccessibleButton\n                        element=\"span\"\n                        className=\"mx_linkButton\"\n                        onClick={this._onSkipPassPhraseClick}\n                    >\n                        {sub}\n                    </AccessibleButton>,\n                },\n            )}</p>\n        </div>;\n    },\n\n    _renderPhasePassPhraseConfirm: function() {\n        const AccessibleButton = sdk.getComponent('elements.AccessibleButton');\n\n        let passPhraseMatch = null;\n        if (this.state.passPhraseConfirm.length > 0) {\n            let matchText;\n            if (this.state.passPhraseConfirm === this.state.passPhrase) {\n                matchText = _t(\"That matches!\");\n            } else {\n                matchText = _t(\"That doesn't match.\");\n            }\n            passPhraseMatch = <div className=\"mx_CreateKeyBackupDialog_passPhraseMatch\">\n                <div>{matchText}</div>\n                <div>\n                    <AccessibleButton element=\"span\" className=\"mx_linkButton\" onClick={this._onSetAgainClick}>\n                        {_t(\"Go back to set it again.\")}\n                    </AccessibleButton>\n                </div>\n            </div>;\n        }\n        const DialogButtons = sdk.getComponent('views.elements.DialogButtons');\n        return <div>\n            <p>{_t(\n                \"Type in your Recovery Passphrase to confirm you remember it. \" +\n                \"If it helps, add it to your password manager or store it \" +\n                \"somewhere safe.\",\n            )}</p>\n            <div className=\"mx_CreateKeyBackupDialog_primaryContainer\">\n                {passPhraseMatch}\n                <div>\n                    <input type=\"password\"\n                        onChange={this._onPassPhraseConfirmChange}\n                        onKeyPress={this._onPassPhraseConfirmKeyPress}\n                        value={this.state.passPhraseConfirm}\n                        className=\"mx_CreateKeyBackupDialog_passPhraseInput\"\n                        placeholder={_t(\"Repeat your passphrase...\")}\n                        autoFocus={true}\n                    />\n                </div>\n            </div>\n            <DialogButtons primaryButton={_t('Next')}\n                onPrimaryButtonClick={this._onPassPhraseConfirmNextClick}\n                hasCancel={false}\n                disabled={this.state.passPhrase !== this.state.passPhraseConfirm}\n            />\n        </div>;\n    },\n\n    _renderPhaseShowKey: function() {\n        const DialogButtons = sdk.getComponent('views.elements.DialogButtons');\n\n        let bodyText;\n        if (this.state.setPassPhrase) {\n            bodyText = _t(\"As a safety net, you can use it to restore your encrypted message history if you forget your Recovery Passphrase.\");\n        } else {\n            bodyText = _t(\"As a safety net, you can use it to restore your encrypted message history.\");\n        }\n\n        return <div>\n            <p>{_t(\"Make a copy of this Recovery Key and keep it safe.\")}</p>\n            <p>{bodyText}</p>\n            <p className=\"mx_CreateKeyBackupDialog_primaryContainer\">\n                <div>{_t(\"Your Recovery Key\")}</div>\n                <div className=\"mx_CreateKeyBackupDialog_recoveryKeyButtons\">\n                    <button onClick={this._onCopyClick}>\n                        {_t(\"Copy to clipboard\")}\n                    </button>\n                    {\n                        // FIXME REDESIGN: buttons should be adjacent but insufficient room in current design\n                    }\n                    <br /><br />\n                    <button onClick={this._onDownloadClick}>\n                        {_t(\"Download\")}\n                    </button>\n                </div>\n                <div className=\"mx_CreateKeyBackupDialog_recoveryKey\">\n                    <code ref={this._collectRecoveryKeyNode}>{this._keyBackupInfo.recovery_key}</code>\n                </div>\n            </p>\n            <br />\n            <DialogButtons primaryButton={_t(\"I've made a copy\")}\n                onPrimaryButtonClick={this._createBackup}\n                hasCancel={false}\n                disabled={!this.state.copied && !this.state.downloaded}\n            />\n        </div>;\n    },\n\n    _renderPhaseKeepItSafe: function() {\n        let introText;\n        if (this.state.copied) {\n            introText = _t(\n                \"Your Recovery Key has been <b>copied to your clipboard</b>, paste it to:\",\n                {}, {b: s => <b>{s}</b>},\n            );\n        } else if (this.state.downloaded) {\n            introText = _t(\n                \"Your Recovery Key is in your <b>Downloads</b> folder.\",\n                {}, {b: s => <b>{s}</b>},\n            );\n        }\n        const DialogButtons = sdk.getComponent('views.elements.DialogButtons');\n        return <div>\n            {introText}\n            <ul>\n                <li>{_t(\"<b>Print it</b> and store it somewhere safe\", {}, {b: s => <b>{s}</b>})}</li>\n                <li>{_t(\"<b>Save it</b> on a USB key or backup drive\", {}, {b: s => <b>{s}</b>})}</li>\n                <li>{_t(\"<b>Copy it</b> to your personal cloud storage\", {}, {b: s => <b>{s}</b>})}</li>\n            </ul>\n            <DialogButtons primaryButton={_t(\"Got it\")}\n                onPrimaryButtonClick={this._onKeepItSafeGotItClick}\n                hasCancel={false}\n            />\n        </div>;\n    },\n\n    _renderBusyPhase: function(text) {\n        const Spinner = sdk.getComponent('views.elements.Spinner');\n        return <div>\n            <p>{_t(text)}</p>\n            <Spinner />\n        </div>;\n    },\n\n    _renderPhaseDone: function() {\n        const DialogButtons = sdk.getComponent('views.elements.DialogButtons');\n        return <div>\n            <p>{_t(\"Backup created\")}</p>\n            <p>{_t(\"Your encryption keys are now being backed up to your Homeserver.\")}</p>\n            <DialogButtons primaryButton={_t('Close')}\n                onPrimaryButtonClick={this._onDone}\n                hasCancel={false}\n            />\n        </div>;\n    },\n\n    _renderPhaseOptOutConfirm: function() {\n        const DialogButtons = sdk.getComponent('views.elements.DialogButtons');\n        return <div>\n            {_t(\n                \"Without setting up Secure Message Recovery, you won't be able to restore your \" +\n                \"encrypted message history if you log out or use another device.\",\n            )}\n            <DialogButtons primaryButton={_t('Set up Secure Message Recovery')}\n                onPrimaryButtonClick={this._onSetUpClick}\n                hasCancel={false}\n            >\n                <button onClick={this._onCancel}>I understand, continue without</button>\n            </DialogButtons>\n        </div>;\n    },\n\n    _titleForPhase: function(phase) {\n        switch (phase) {\n            case PHASE_PASSPHRASE:\n                return _t('Create a Recovery Passphrase');\n            case PHASE_PASSPHRASE_CONFIRM:\n                return _t('Confirm Recovery Passphrase');\n            case PHASE_OPTOUT_CONFIRM:\n                return _t('Warning!');\n            case PHASE_SHOWKEY:\n                return _t('Recovery Key');\n            case PHASE_KEEPITSAFE:\n                return _t('Keep it safe');\n            case PHASE_BACKINGUP:\n                return _t('Backing up...');\n            default:\n                return _t(\"Create Key Backup\");\n        }\n    },\n\n    render: function() {\n        const BaseDialog = sdk.getComponent('views.dialogs.BaseDialog');\n\n        let content;\n        if (this.state.error) {\n            const DialogButtons = sdk.getComponent('views.elements.DialogButtons');\n            content = <div>\n                <p>{_t(\"Unable to create key backup\")}</p>\n                <div className=\"mx_Dialog_buttons\">\n                    <DialogButtons primaryButton={_t('Retry')}\n                        onPrimaryButtonClick={this._createBackup}\n                        hasCancel={true}\n                        onCancel={this._onCancel}\n                    />\n                </div>\n            </div>;\n        } else {\n            switch (this.state.phase) {\n                case PHASE_PASSPHRASE:\n                    content = this._renderPhasePassPhrase();\n                    break;\n                case PHASE_PASSPHRASE_CONFIRM:\n                    content = this._renderPhasePassPhraseConfirm();\n                    break;\n                case PHASE_SHOWKEY:\n                    content = this._renderPhaseShowKey();\n                    break;\n                case PHASE_KEEPITSAFE:\n                    content = this._renderPhaseKeepItSafe();\n                    break;\n                case PHASE_BACKINGUP:\n                    content = this._renderBusyPhase(_td(\"Backing up...\"));\n                    break;\n                case PHASE_DONE:\n                    content = this._renderPhaseDone();\n                    break;\n                case PHASE_OPTOUT_CONFIRM:\n                    content = this._renderPhaseOptOutConfirm();\n                    break;\n            }\n        }\n\n        return (\n            <BaseDialog className='mx_CreateKeyBackupDialog'\n                onFinished={this.props.onFinished}\n                title={this._titleForPhase(this.state.phase)}\n                hasCancel={[PHASE_DONE].includes(this.state.phase)}\n            >\n            <div>\n                {content}\n            </div>\n            </BaseDialog>\n        );\n    },\n});\n"],"sourceRoot":""}
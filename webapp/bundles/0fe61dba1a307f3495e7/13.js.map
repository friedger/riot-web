{"version":3,"sources":["src/async-components/views/dialogs/ImportE2eKeysDialog.js"],"names":["__webpack_require__","Matrix","MegolmExportEncryption","_languageHandler","React","createClass","displayName","propTypes","matrixClient","PropTypes","instanceOf","MatrixClient","isRequired","onFinished","func","getInitialState","enableSubmit","phase","errStr","componentWillMount","this","_unmounted","componentWillUnmount","_onFormChange","ev","files","refs","file","setState","passphrase","value","length","_onFormSubmit","preventDefault","_startImport","_this","_promise2","default","resolve","reject","reader","FileReader","onload","e","target","result","onerror","readAsArrayBuffer","readFileAsArrayBuffer","then","arrayBuffer","decryptMegolmKeyFile","keys","props","importRoomKeys","JSON","parse","catch","console","error","msg","friendlyText","_t","_onCancelClick","render","BaseDialog","sdk","getComponent","disableForm","state","_react2","createElement","className","title","onSubmit","htmlFor","ref","id","type","autoFocus","onChange","disabled","size","onClick"],"mappings":"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","file":"bundles/0fe61dba1a307f3495e7/13.js","sourcesContent":["/*\nCopyright 2017 Vector Creations Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as Matrix from 'matrix-js-sdk';\nimport * as MegolmExportEncryption from '../../../utils/MegolmExportEncryption';\nimport sdk from '../../../index';\nimport { _t } from '../../../languageHandler';\n\nfunction readFileAsArrayBuffer(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            resolve(e.target.result);\n        };\n        reader.onerror = reject;\n\n        reader.readAsArrayBuffer(file);\n    });\n}\n\nconst PHASE_EDIT = 1;\nconst PHASE_IMPORTING = 2;\n\nexport default React.createClass({\n    displayName: 'ImportE2eKeysDialog',\n\n    propTypes: {\n        matrixClient: PropTypes.instanceOf(Matrix.MatrixClient).isRequired,\n        onFinished: PropTypes.func.isRequired,\n    },\n\n    getInitialState: function() {\n        return {\n            enableSubmit: false,\n            phase: PHASE_EDIT,\n            errStr: null,\n        };\n    },\n\n    componentWillMount: function() {\n        this._unmounted = false;\n    },\n\n    componentWillUnmount: function() {\n        this._unmounted = true;\n    },\n\n    _onFormChange: function(ev) {\n        const files = this.refs.file.files || [];\n        this.setState({\n            enableSubmit: (this.refs.passphrase.value !== \"\" && files.length > 0),\n        });\n    },\n\n    _onFormSubmit: function(ev) {\n        ev.preventDefault();\n        this._startImport(this.refs.file.files[0], this.refs.passphrase.value);\n        return false;\n    },\n\n    _startImport: function(file, passphrase) {\n        this.setState({\n            errStr: null,\n            phase: PHASE_IMPORTING,\n        });\n\n        return readFileAsArrayBuffer(file).then((arrayBuffer) => {\n            return MegolmExportEncryption.decryptMegolmKeyFile(\n                arrayBuffer, passphrase,\n            );\n        }).then((keys) => {\n            return this.props.matrixClient.importRoomKeys(JSON.parse(keys));\n        }).then(() => {\n            // TODO: it would probably be nice to give some feedback about what we've imported here.\n            this.props.onFinished(true);\n        }).catch((e) => {\n            console.error(\"Error importing e2e keys:\", e);\n            if (this._unmounted) {\n                return;\n            }\n            const msg = e.friendlyText || _t('Unknown error');\n            this.setState({\n                errStr: msg,\n                phase: PHASE_EDIT,\n            });\n        });\n    },\n\n    _onCancelClick: function(ev) {\n        ev.preventDefault();\n        this.props.onFinished(false);\n        return false;\n    },\n\n    render: function() {\n        const BaseDialog = sdk.getComponent('views.dialogs.BaseDialog');\n\n        const disableForm = (this.state.phase !== PHASE_EDIT);\n\n        return (\n            <BaseDialog className='mx_importE2eKeysDialog'\n                onFinished={this.props.onFinished}\n                title={_t(\"Import room keys\")}\n            >\n                <form onSubmit={this._onFormSubmit}>\n                    <div className=\"mx_Dialog_content\">\n                        <p>\n                            { _t(\n                                'This process allows you to import encryption keys ' +\n                                'that you had previously exported from another Matrix ' +\n                                'client. You will then be able to decrypt any ' +\n                                'messages that the other client could decrypt.',\n                            ) }\n                        </p>\n                        <p>\n                            { _t(\n                                'The export file will be protected with a passphrase. ' +\n                                'You should enter the passphrase here, to decrypt the file.',\n                            ) }\n                        </p>\n                        <div className='error'>\n                            { this.state.errStr }\n                        </div>\n                        <div className='mx_E2eKeysDialog_inputTable'>\n                            <div className='mx_E2eKeysDialog_inputRow'>\n                               <div className='mx_E2eKeysDialog_inputLabel'>\n                                   <label htmlFor='importFile'>\n                                       { _t(\"File to import\") }\n                                   </label>\n                               </div>\n                               <div className='mx_E2eKeysDialog_inputCell'>\n                                   <input ref='file' id='importFile' type='file'\n                                       autoFocus={true}\n                                       onChange={this._onFormChange}\n                                       disabled={disableForm} />\n                               </div>\n                            </div>\n                            <div className='mx_E2eKeysDialog_inputRow'>\n                               <div className='mx_E2eKeysDialog_inputLabel'>\n                                   <label htmlFor='passphrase'>\n                                       { _t(\"Enter passphrase\") }\n                                   </label>\n                               </div>\n                               <div className='mx_E2eKeysDialog_inputCell'>\n                                   <input ref='passphrase' id='passphrase'\n                                       size='64' type='password'\n                                       onChange={this._onFormChange}\n                                       disabled={disableForm} />\n                               </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='mx_Dialog_buttons'>\n                        <input className='mx_Dialog_primary' type='submit' value={_t('Import')}\n                            disabled={!this.state.enableSubmit || disableForm}\n                        />\n                        <button onClick={this._onCancelClick} disabled={disableForm}>\n                            { _t(\"Cancel\") }\n                        </button>\n                    </div>\n                </form>\n            </BaseDialog>\n        );\n    },\n});\n"],"sourceRoot":""}